name: Build and deploy

on:
  push: {}
  pull_request: {}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: installer
            buildname: py311-x86_64
          - build: installer
            buildname: py311-x86
          - build: installer
            buildname: py38-x86_64
          - build: installer
            buildname: py38-x86
          - build: portable
            buildname: py311-x86_64
          - build: portable
            buildname: py311-x86
          - build: portable
            buildname: py38-x86_64
          - build: portable
            buildname: py38-x86
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          ./install-build-dependencies.sh
      - name: Build
        run: |
          export SOURCE_DATE_EPOCH=$(git show -s --format=%ct)
          "./build-${{ matrix.build }}.sh" "${{ matrix.buildname }}"
      - name: Get file name
        id: vars
        run: |
          echo "file_name=$(cd dist && ls *.*)" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v3
        if: github.event_name == 'push'
        with:
          name: ${{ steps.vars.outputs.file_name }}
          path: dist/*

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - run: mkdir dist
      - uses: actions/download-artifact@v3
        with:
          path: ./dist
      - run: ./deploy.sh ./dist/**/*
        env:
          RELEASES_API_KEY: ${{ secrets.GITHUB_TOKEN }}
